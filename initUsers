#!/usr/bin/bash

if [[ "$EUID" -ne 0 ]]; then
	exec sudo "$0"
fi

yamlloc="/scripts/Sysad-1-users.yaml"
readarray adminarray <<< $(yq ".admins[].username" "$yamlloc") 
readarray authorarray <<< $(yq ".authors[].username" "$yamlloc")
readarray modarray <<< $(yq ".mods[].username" "$yamlloc")
readarray userarray <<< $(yq ".users[].username" "$yamlloc")

echo -e "Stage 1: create groups"
groups=("user" "admin" "author" "mod")
for group in "${groups[@]}"; do
	groupadd "g_$group" > /dev/null 2>&1
done;

echo -e "done creating groups\n"
echo "Stage 2.1: creating admins and assigning home directories"

mkdir "/home/admins" > /dev/null 2>&1
for admin in "${adminarray[@]}"; do
	admin=$(xargs <<< "$admin")
	mkdir "/home/admins/$admin" > /dev/null 2>&1
	useradd -g g_admin -d "/home/admins/$admin" "$admin" > /dev/null 2>&1 && chpasswd <<< "$admin:pass1234" > /dev/null 2>&1
	chown -R "$admin" "/home/admins/$admin"
	chmod -R 700 "/home/admins/$admin"
	echo "done with $admin"
done;

echo -e "\nStage 2.2: creating authors and creating directories"

mkdir "/home/authors" > /dev/null 2>&1
for author in "${authorarray[@]}"; do
	author=$(xargs <<< "$author")
	mkdir "/home/authors/$author" "/home/authors/$author/public" "/home/authors/$author/blogs" > /dev/null 2>&1
	useradd -g g_author -d "/home/authors/$author" "$author" > /dev/null 2>&1 && chpasswd <<< "$author:pass1234" > /dev/null 2>&1

	# set blogs.yaml ownership to admin and root so author cannot modify without manageBlogs
	touch "/home/authors/$author/blogs.yaml"
	chown root:g_admin "/home/authors/$author/blogs.yaml"
	chmod 770 "/home/authors/$author/blogs.yaml"

	# set owner and group of home directories as admin and root so author cannot delete directories
	chown root:g_admin "/home/authors/$author"
	chmod 770 "/home/authors/$author"
	setfacl -m u:"$author":r-x "/home/authors/$author"
	
	# give full access to blogs but not to public directory: author has to use manageBlogs to publish/delete/archive blogs
	chown "$author":g_admin "/home/authors/$author/public"
	chown "$author":g_admin "/home/authors/$author/blogs"
	chmod 570 "/home/authors/$author/public"
	chmod 770 "/home/authors/$author/blogs"

	setfacl -m g:g_user:r-x "/home/authors/$author/public"
	setfacl -m g:g_user:--x "/home/authors/$author"
	echo "done with $author"
done;

echo -e "\nStage 2.3: creating users and creating directories"

mkdir "/home/users" > /dev/null 2>&1
for user in "${userarray[@]}"; do
	user=$(xargs <<< "$user")
	mkdir "/home/users/$user" "/home/users/$user/all_blogs" "/home/users/$user/ForYou" > /dev/null 2>&1
	useradd -g g_user -d "/home/users/$user" "$user" > /dev/null 2>&1 && chpasswd <<< "$user:pass1234" > /dev/null 2>&1
	for author in "${authorarray[@]}"; do
		author=$(xargs <<< "$author")
		if [[ ! -L "/home/users/$user/all_blogs/$author" ]]; then
			ln -s "/home/authors/$author/public" "/home/users/$user/all_blogs/$author" > /dev/null 2>&1
		fi
	done;

	chown -R "$user":g_admin "/home/users/$user"
	chmod -R 570 "/home/users/$user"
	echo "done with $user"
done;

echo -e "\nStage 2.4: creating mods and creating directories"

mkdir "/home/mods" > /dev/null 2>&1
counter=0
for mod in "${modarray[@]}"; do
	mod=$(xargs <<< "$mod")
	mkdir "/home/mods/$mod" "/home/mods/$mod/author" > /dev/null 2>&1
	readarray assignedauth <<< $(yq ".mods[$counter].authors[]" "$yamlloc")
	
	touch "/home/mods/$mod/blacklist.txt"
	useradd -g g_mod -d "/home/mods/$mod" "$mod" > /dev/null 2>&1 && chpasswd <<< "$mod:pass1234" > /dev/null 2>&1

	for author in "${assignedauth[@]}"; do
		author=$(xargs <<< "$author")
		if [[ ! -L "/home/mods/$mod/author/$author" ]]; then
			ln -s "/home/authors/$author/public" "/home/mods/$mod/author/$author" > /dev/null 2>&1
		fi
		setfacl -m u:$mod:rwx "/home/authors/$author/public"
		setfacl -m u:$mod:--x "/home/authors/$author"
	done;
	
	IFS= readarray existingauth <<< $(ls -1 "/home/mods/$mod/author")
        for exauthor in "${existingauth[@]}"; do
                exauthor=$(xargs <<< "$exauthor")
                indicator=0
                for author in "${assignedauth[@]}"; do
                        author=$(xargs <<< "$author")
                        if [[ "$author" == "$exauthor" ]]; then
                                indicator=1
                                break
                        fi
                done;
                if [[ $indicator -ne 1 ]]; then
                        setfacl -x u:$mod "/home/authors/$exauthor"
                        setfacl -x u:$mod "/home/authors/$exauthor/public"
                        rm "/home/mods/$mod/author/$exauthor"
                fi
        done;

	chown -R "$mod":g_admin "/home/mods/$mod"
	chmod -R 570 "/home/mods/$mod/author"
	chmod 770 "/home/mods/$mod"
		
	chmod 770 "/home/mods/$mod/blacklist.txt"

	echo "done with $mod"
	counter=$((counter + 1))
done;

echo -e "\nStage 3: restricting access to removed users"
IFS= readarray existinguser <<< $(ls -1 "/home/users")
for exuser in "${existinguser[@]}"; do
	exuser=$(xargs <<< "$exuser")
	indicator=0
	for user in "${userarray[@]}"; do
		user=$(xargs <<< "$user")
		if [[ "$user" == "$exuser" ]]; then
			indicator=1
			break
		fi
	done;
	if [[ $indicator -ne 1 ]]; then
		chmod -R 070 "/home/users/$exuser"
	fi
done;
echo "Done with removing users"

echo -e "\nStage 4: restricting access to removed authors"
IFS= readarray existingauth <<< $(ls -1 "/home/authors")
for exauthor in "${existingauth[@]}"; do
        exauthor=$(xargs <<< "$exauthor")
        indicator=0
        for author in "${authorarray[@]}"; do
                author=$(xargs <<< "$author")
                if [[ "$author" == "$exauthor" ]]; then
                        indicator=1
                        break
                fi
        done;
        if [[ $indicator -ne 1 ]]; then
                chmod -R 070 "/home/authors/$exauthor"
        fi
done;
echo "Done with removing authors"
